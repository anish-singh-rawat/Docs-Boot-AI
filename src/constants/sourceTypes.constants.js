import {
  DocumentTextIcon,
  LinkIcon,
  MapIcon,
  QueueListIcon,
  RssIcon,
  TableCellsIcon,
  VideoCameraIcon,
  QuestionMarkCircleIcon,
  DocumentIcon,
  CircleStackIcon,
  CloudIcon
} from '@heroicons/react/24/outline'
import WPLogo from '@/components/WPLogo'
import NotionLogo from '@/components/NotionLogo'
import IntercomLogo from '@/components/IntercomLogo'
import DriveLogo from '@/components/DriveLogo'
import DropboxLogo from '@/components/DropboxLogo'
import BoxLogo from '@/components/BoxLogo'
import ZendeskLogo from '@/components/ZendeskLogo'
import SharepointLogo from '@/components/SharepointLogo'

export const sourceTypes = [
  {
    id: 'url',
    title: 'URL',
    description: 'Answer from the content from a single webpage',
    fullDescription: 'Add the URL of a single webpage to learn from. This can be a blog post, a news article, or any other page on the web. We will download the page, parse the content, and add it to this bot.',
    icon: LinkIcon,
    isPro: false,
    coming: false,
    fieldUrl: 'required',
    fieldTitle: 'optional',
    fieldFile: false,
    fieldSchedule: true,
    fieldQA: false,
  },
  {
    id: 'document',
    title: 'Document',
    description: 'Upload document files containing text (Text, Office, PDF, HTML, MD, EML, ZIP, etc)',
    fullDescription: 'Upload a document file containing text to learn from. Some examples are product documentation, slide decks, research papers, employee handbooks, an ebook, or any content you can convert to a text file. We will parse the content, and add it to this bot. Currently we support adding .txt, .docx, .pptx, .md, .html, .pdf, and .eml  documents. Paid users can also add .zip files containing multiple documents!',
    icon: DocumentIcon,
    isPro: false,
    coming: false,
    fieldUrl: 'optional',
    fieldTitle: 'required',
    fieldFile: 'required',
    fileTypes: {txt: 'text/plain', docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', pptx: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', eml: 'message/rfc822', html: 'text/html', pdf: 'application/pdf', zip: 'application/zip', md: 'text/plain'},
    fieldSchedule: false,
    fieldQA: false,
  },
  {
    id: 'wp',
    title: 'WordPress',
    description: 'Upload a WordPress XML export file of your content',
    fullDescription: 'Upload a WordPress XML (WXR) export file of your site content. This can be a full export of your site, or a subset of your content like a specific post type or category. You can download your export file via the Tools->Export menu in WordPress. We will parse the content along with sources and titles, and add it to this bot.',
    icon: WPLogo,
    isPro: true,
    coming: false,
    fieldUrl: false,
    fieldTitle: false,
    fieldFile: 'required',
    fileTypes: {xml: 'text/xml'},
    fieldSchedule: false,
    fieldQA: false,
  },
  {
    id: 'sitemap',
    title: 'Sitemap',
    description: 'Answer from all content on a website refrenced by its XML sitemap',
    fullDescription: 'Add the URL of a website with a sitemap to learn from. We will parse all sitemaps on the domain, download all html pages in the sitemap, parse the content, and add it to this bot index.',
    icon: MapIcon,
    isPro: true,
    coming: false,
    fieldUrl: 'required',
    fieldTitle: false,
    fieldFile: false,
    fieldSchedule: true,
    fieldQA: false,
  },
  {
    id: 'urls',
    title: 'URL List',
    description: 'Index all content from a bulk list of URLs',
    fullDescription: 'Upload a simple txt or csv file with a list of urls. We will download all html pages in the list, parse the content, and add it to this bot index.',
    icon: QueueListIcon,
    isPro: true,
    coming: false,
    fieldUrl: false,
    fieldTitle: false,
    fieldFile: 'required',
    fileTypes: {csv: 'text/csv', txt: 'text/plain'},
    fieldSchedule: true,
    fieldQA: false,
  },
  {
    id: 'csv',
    title: 'Raw Data',
    description: 'Bulk upload raw data via a specially formatted CSV file',
    fullDescription: 'Add your content in bulk by uploading a specially formatted CSV file containing text blocks and sources to learn from.',
    icon: CircleStackIcon,
    isPro: true,
    coming: false,
    fieldUrl: false,
    fieldTitle: false,
    fieldFile: 'required',
    fileTypes: {csv: 'text/csv'},
    fieldSchedule: false,
    fieldQA: false,
  },
  {
    id: 'rss',
    title: 'RSS Feed',
    description: 'Answer from post content from a blog RSS feed url',
    icon: RssIcon,
    isPro: true,
    coming: false,
    fieldUrl: 'required',
    fieldTitle: false,
    fieldFile: false,
    fieldSchedule: true,
    fieldQA: false,
  },
  {
    id: 'qa',
    title: 'Q&A',
    description: 'Finetune your bot by providing common questions and answers',
    fullDescription: 'Manually write a list of FAQs. This is a great way to teach your bot how to answer common questions about your product or service, or to finetune the answers for specific problematic questions. You can also create these FAQs by editing previous answers directly from your question logs.',
    icon: QuestionMarkCircleIcon,
    isPro: false,
    coming: false,
    fieldUrl: false,
    fieldTitle: false,
    fieldFile: false,
    fieldSchedule: false,
    fieldQA: 'required',
  },
  {
    id: 'notion',
    title: 'Notion',
    description: 'Answer questions from the content of Notion pages (BETA)',
    fullDescription: 'Connect to Notion via our partner Carbon and select which pages to learn from. We will download the pages, parse the content, and add them to this bot. Note that you can only have one Notion account source per bot. If you create a new Notion source for the same Notion user and account, it will replace the previous one with the selected pages.',
    icon: NotionLogo,
    isCarbon: 'NOTION',
    isPro: true,
    coming: false,
    fieldUrl: false,
    fieldTitle: false,
    fieldFile: false,
    fieldSchedule: true,
    fieldQA: false,
  },
  {
    id: 'google_docs',
    title: 'Google Drive',
    description: 'Answer questions from the content of document files in Google Drive (BETA)',
    fullDescription: 'Connect to Google Drive via our partner Carbon and select which documents to learn from. We support Docs, Slides, Sheets, and pdf, docx, pptx, xlsx, csv, tsv, rtf, txt, png, jpg, and md files. We will download the documents, parse the content, and add them to this bot. Note that you can only have one Google Drive account source per bot. If you create a new Google Drive source for the same Google user, it will replace the previous one with the selected documents.',
    icon: DriveLogo,
    isCarbon: 'GOOGLE_DRIVE',
    isPro: true,
    coming: false,
    fieldUrl: false,
    fieldTitle: false,
    fieldFile: false,
    fieldSchedule: true,
    fieldQA: false,
  },
  {
    id: 'dropbox',
    title: 'Dropbox',
    description: 'Answer questions from the content of document files in Dropbox (BETA)',
    fullDescription: 'Connect to Dropbox via our partner Carbon and select which documents to learn from. We support pdf, docx, pptx, xlsx, csv, tsv, rtf, txt, png, jpg, and md files. We will download the documents, parse the content, and add them to this bot. Note that you can only have one Dropbox account source per bot. If you create a new Dropbox source for the same user, it will replace the previous one with the selected documents.',
    icon: DropboxLogo,
    isCarbon: 'DROPBOX',
    isPro: true,
    coming: false,
    fieldUrl: false,
    fieldTitle: false,
    fieldFile: false,
    fieldSchedule: true,
    fieldQA: false,
  },
  {
    id: 'onedrive',
    title: 'OneDrive',
    description: 'Answer questions from the content of document files in Microsoft OneDrive (BETA)',
    fullDescription: 'Connect to Microsoft OneDrive via our partner Carbon and select which documents to learn from. We support pdf, docx, pptx, xlsx, csv, tsv, rtf, txt, png, jpg, and md files. We will download the documents, parse the content, and add them to this bot. Note that you can only have one Dropbox account source per bot. If you create a new Dropbox source for the same user, it will replace the previous one with the selected documents.',
    icon: CloudIcon,
    isCarbon: 'ONEDRIVE',
    isPro: true,
    coming: false,
    fieldUrl: false,
    fieldTitle: false,
    fieldFile: false,
    fieldSchedule: true,
    fieldQA: false,
  },
  {
    id: 'box',
    title: 'Box',
    description: 'Answer questions from the content of document files in Box cloud storage (BETA)',
    fullDescription: 'Connect to Box cloud storage via our partner Carbon and select which documents to learn from. We support pdf, docx, pptx, xlsx, csv, tsv, rtf, txt, png, jpg, and md files. We will download the documents, parse the content, and add them to this bot. Note that you can only have one Dropbox account source per bot. If you create a new Dropbox source for the same user, it will replace the previous one with the selected documents.',
    icon: BoxLogo,
    isCarbon: 'BOX',
    isPro: true,
    coming: false,
    fieldUrl: false,
    fieldTitle: false,
    fieldFile: false,
    fieldSchedule: true,
    fieldQA: false,
  },
  {
    id: 'sharepoint',
    title: 'SharePoint',
    description: 'Answer questions from the content of document files in Microsoft SharePoint (BETA)',
    fullDescription: 'Connect to Microsoft SharePoint via our partner Carbon and select which documents to learn from. We support pdf, docx, pptx, xlsx, csv, tsv, rtf, txt, png, jpg, and md files. We will download the documents, parse the content, and add them to this bot. Note that you can only have one Sharepoint source per bot. If you create a new Sharepoint source for the same user, it will replace the previous one with the selected documents. When asked for your Sharepoint tenant and site name, you can get them from the SharePoint site URL. Example for https://uglyrobot.sharepoint.com/sites/docsbot, "uglyrobot" is the tenant and "docsbot" is the site name.',
    icon: SharepointLogo,
    isCarbon: 'SHAREPOINT',
    isPro: true,
    coming: false,
    fieldUrl: false,
    fieldTitle: false,
    fieldFile: false,
    fieldSchedule: true,
    fieldQA: false,
  },
  {
    id: 'zendesk',
    title: 'Zendesk',
    description: 'Answer questions from Zendesk Help Center articles (BETA)',
    fullDescription: 'Connect to Zendesk via our partner Carbon and we will import all Help Center articles. Note that you can only have one Intercom account source per bot. If you create a new Intercom source for the same Intercom account, it will replace the previous one.',
    icon: ZendeskLogo,
    isCarbon: 'ZENDESK',
    isPro: true,
    coming: false,
    fieldUrl: false,
    fieldTitle: false,
    fieldFile: false,
    fieldSchedule: true,
    fieldQA: false,
  },
  {
    id: 'intercom',
    title: 'Intercom',
    description: 'Answer questions from Intercom Help Center articles (BETA)',
    fullDescription: 'Connect to Intercom via our partner Carbon and we will import all Help Center articles. Note that you can only have one Intercom account source per bot. If you create a new Intercom source for the same Intercom account, it will replace the previous one.',
    icon: IntercomLogo,
    isCarbon: 'INTERCOM',
    isPro: true,
    coming: false,
    fieldUrl: false,
    fieldTitle: false,
    fieldFile: false,
    fieldSchedule: true,
    fieldQA: false,
  }
  /*
  {
    id: 'youtube',
    title: 'YouTube',
    description: 'Answer questions based on the transcripts of a YouTube video or channel',
    icon: VideoCameraIcon,
    isPro: true,
    coming: true,
    fieldUrl: 'required',
    fieldTitle: false,
    fieldFile: false,
    fieldSchedule: true,
    fieldQA: false,
  },
  */
]

export const canSourceTypeSchedule = (typeName) => {
  const sourceType = sourceTypes.find((sourceType) => sourceType.id === typeName)
  return sourceType?.fieldSchedule
}

export const canSourceTypeDownload = (typeName) => {
  const sourceType = sourceTypes.find((sourceType) => sourceType.id === typeName)
  return sourceType?.fieldFile
}

//is carbon source
export const isCarbonSourceType = (typeName) => {
  const sourceType = sourceTypes.find((sourceType) => sourceType.id === typeName)
  return sourceType?.isCarbon || false
}